{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.1",
    "title": "kapusta42back",
    "description": "Showing off swagger-ui-express",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [
    {
      "url": "http://localhost:5000"
    },
    { "url": "https://kapusta42back-end.herokuapp.com" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "User endpoints"
    },
    {
      "name": "Balance",
      "description": "Balance endpoints"
    },
    {
      "name": "Transaction",
      "description": "Transaction endpoints"
    },
    {
      "name": "Report",
      "description": "Report endpoints"
    }
  ],




  "paths": {
    "/api/users/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "security": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "security": [],
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },
    "/api/users/logout": {
      "get": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Invalid signature",
            "content": {}
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "tags": ["User"],
        "summary": "Get information about the current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Invalid signature",
            "content": {}
          }
        }
      }
    },
    "/api/balance/current": {
      "get": {
        "tags": ["Balance"],
        "summary": "Get user balance",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/api/balance/update": {
      "patch": {
        "tags": ["Balance"],
        "summary": "Update balance",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Balance object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBalanceRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },

    "/api/transactions/income": {
      "post": {
        "tags": ["Transaction"],
        "summary": "Add income transaction",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Object income",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncomeTransactionRequest"
              }
            }
          }
        },

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncomeTransactionResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/api/transactions/expanse": {
      "post": {
        "tags": ["Transaction"],
        "summary": "Add expanse transaction",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Object expanse",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpanseTransactionRequest"
              }
            }
          }
        },

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpanseTransactionResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/api/transactions/:type/:transactionId": {
      "delete": {
        "tags": ["Transaction"],
        "summary": "Remove transaction",
        "parameters": [
          {
            "in": "path",
            "name": "type",
            "required": true,
            "type": "string",
            "description": "On of 'income' or 'expense'"
          },
          {
            "in": "path",
            "name": "transactionId",
            "required": true,
            "type": "string",
            "description": "Transaction ID"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTransactionResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    }
  },
  
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "example@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "VerifyResponse":{
        "type": "object",
        "required": ["message"],
        "properties": {
          "message": {
            "type": "string",
            "format": "string",
            "example": "Verification successful"
          }
        }
      },
      "CurrentResponse":{
        "type": "object",
        "required": ["email", "avatarURL", "totalBalance"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "example@gmail.com"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's link avatar",
            "example": "//www.gravatar.com/avatar/cf5831de3973012ae4f2ee60242fb617"
          },
          "totalBalance": {
            "type": "number",
            "description": "User's balance",
            "example": 50000
          }
        }
      },
      "UpdateBalanceRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "totalBalance": {
            "type": "number",
            "description": "User's balance",
            "example": 11111
          }
        }
      },
      "AddExpenseTransactionRequest": {
        "type": "object",
        "required": ["date", "description", "category", "sum", "type"],
        "properties": {
          "date": {
            "type": "string",
            "description": "Transaction date",
            "format": "date",
            "example": "2022-08-30"
          },
          "description": {
            "type": "string",
            "description": "Transaction description",
            "example": "Meat"
          },
          "category": {
            "type": "string",
            "description": [
              "transport",
              "products",
              "health",
              "alcohol",
              "entertainment",
              "housing",
              "technique",
              "communal, communications",
              "sports, hobbies",
              "education",
              "other",
              "wages",
              "income"
            ],
            "example": "products"
          },
          "sum": {
            "type": "number",
            "description": "summa",
            "example": 400
          },
          "type": {
            "type": "string",
            "description": "expense or income",
            "example": "expense"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "required": ["message", "email"],
        "properties": {
          "message": {
            "type": "string",
            "format": "string",
            "example": "Go to your email and confirm registration"
          },
          "email": {
            "type": "string",
            "description":"User's email",
            "format": "email"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "required": ["token", "user"],
        "properties": {
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzMTM3ZThlNTZlY2JiYTJjYTBjNmY2MCIsImlhdCI6MTY2MjIyMjA1MiwiZXhwIjoxNjYyMzA4NDUyfQ.FVVEZEcdKx2VrZqzSY3gQeNbxpblHbt5NjwMzkooNaI"
          },
          "user":{
            "type": "object",
            "required": ["email"],
            "properties":{
              "email": {
                "type": "string",
                "example":"example@gmail.com",
                "format": "email"
              }
            }
          
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "message",
            "example": "Logout success with id630a7441b8ed1ff8a8a403ee"
          },
          "code": {
            "type": "number",
            "description": "code",
            "example": "200"
          }
        },
        "example": {
        "email": "example@gmail.com",
        "avatarURL": "www.gravatar.com/avatar/afd5b46d171ec84e3796561ca6d4f4a9",
        "totalBalance": 5500
    }
      },

      "BalanceResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "message",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "code",
            "example": "200"
          },
          "data": {
            "type": "object",
            "description": "response",
            "example": {
              "totalBalance": 5000
            }
          }
        },
        "example": {
            "totalBalance": 5000
          }
      },
      "IncomeTransactionRequest": {
        "type": "object",
        "required": ["date", "description", "category", "sum"],
        "properties": {
            "date": {
              "type": "string",
              "description": "date",
              "example": "2022-08-29T00:00:00.000Z"
            },
            "description": {
              "type": "string",
              "description": "any description",
              "example": "premium"
            },
            "category": {
              "type": "string",
              "description": "one of salary or extraSalary",
              "example": "extraSalary"
            },
            "sum": {
              "type": "number",
              "description": "sum transaction",
              "example": "6500"
            }
        }
      },
      "IncomeTransactionResponse": {
        "type": "object",
        "required": ["id", "date", "owner", "sum", "description", "category"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Transaction id",
            "example": "630c6424c4126b2f6d97fa7f"
          },
          "date": {
            "type": "string",
            "description": "Date transaction",
            "example": "2022-01-01T00:00:00.000Z"
          },
          "owner": {
            "type": "string",
            "description": "User id",
            "example": "_id: 630a4ce122d8de88190363c9"
          },
          "description": {
            "type": "string",
            "description": "Description transaction",
            "example": "premium"
          },
          "category": {
            "type": "string",
            "description": "one of 'salary' or 'extraSalary'",
            "example": "extraSalary"
          },
          "sum": {
            "type": "number",
            "description":"sum description",
            "example": 6500
          },
          "createdAt": {
            "type": "string",
            "description": "Date transaction",
            "example": "2022-08-29T07:00:52.786Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Date transaction",
            "example": "2022-08-29T07:00:52.786Z"
          } 
        }
      },
      "ExpanseTransactionRequest": {
        "type": "object",
        "required": ["date", "description", "category", "sum"],
        "properties": {
            "date": {
              "type": "string",
              "description": "date",
              "example": "2022-08-29T00:00:00.000Z"
            },
            "description": {
              "type": "string",
              "description": "any description",
              "example": "banana"
            },
            "category": {
              "type": "string",
              "description": "one of salary or extraSalary",
              "example": "products"
            },
            "sum": {
              "type": "number",
              "description": "sum transaction",
              "example": "100"
            }
        }
      },
      "ExpanseTransactionResponse": {
        "type": "object",
        "required": ["id", "date", "owner", "sum", "description", "category"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Transaction id",
            "example": "630c6424c4126b2f6d97fa7f"
          },
          "date": {
            "type": "string",
            "description": "Date transaction",
            "example": "2022-01-01T00:00:00.000Z"
          },
          "owner": {
            "type": "string",
            "description": "User id",
            "example": "_id: 630a4ce122d8de88190363c9"
          },
          "description": {
            "type": "string",
            "description": "Any description",
            "example": "banana"
          },
          "category": {
            "type": "string",
            "description": "one of 'transport', 'products', 'entertainment', 'housing', 'technique', 'communal,communications', 'education', 'other', 'wages', 'income'",
            "example": "products"
          },
          "sum": {
            "type": "number",
            "description":"sum description",
            "example": 100
          },
          "createdAt": {
            "type": "string",
            "description": "Date transaction",
            "example": "2022-08-29T07:00:52.786Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Date transaction",
            "example": "2022-08-29T07:00:52.786Z"
          } 
        }
      },
      "deleteTransactionResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "message",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "code",
            "example": "200"
          },
          "data": {
            "type": "object",
            "description": "response",
            "example": {
              "message": "Transaction with ID630dd624f6a94d02010611fd deleted",
              "newBalance": -300
            }
          },
          "example": {
            "status": "success",
            "code": 200,
            "data": {
              "message": "Transaction with ID630dd624f6a94d02010611fd deleted",
              "newBalance": -300
            }
          }
        }
      },
      "DeleteTransactionResponse": {
        "type": "object",
        "required": ["message", "newBalance"],
        "properties": {
          "message": {
            "type": "string",
            "description": "message",
            "example": "Transaction with ID: 6314ea32e43673717f8f6b1e deleted"
          },
          "newBalance": {
            "type": "number",
            "description": "code",
            "example": "40000"
          }
        }
      }
    },

    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
