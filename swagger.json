{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.1",
    "title": "kapusta42back",
    "description": "Showing off swagger-ui-express",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [
    {
      "url": "http://localhost:5000"
    },
    { "url": "https://kapusta42back-end.herokuapp.com" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Cash",
      "description": "Cash endpoints"
    },
    {
      "name": "Transaction",
      "description": "Transaction endpoints"
    }
  ],
  "paths": {
    "/api/users/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "security": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "security": [],
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },
    "/api/users/logout": {
      "get": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Invalid signature",
            "content": {}
          }
        }
      }
    },
    "/api/balance/current": {
      "get": {
        "tags": ["Cash"],
        "summary": "Get user balance",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/api/balance/update": {
      "patch": {
        "tags": ["Cash"],
        "summary": "Update balance",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Balance object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBalanceRequest"
              }
            }
          }
        },

        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/api/transactions": {
      "get": {
        "tags": ["Transaction"],
        "summary": "Get all trasaction",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllTransactionResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      },

      "post": {
        "tags": ["Transaction"],
        "summary": "Add trasaction",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Transaction object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTransactionRequest"
              }
            }
          }
        },

        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddTransactionResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/api/transactions/{transactionId}": {
      "delete": {
        "tags": ["Transaction"],
        "summary": "Delete trasaction",
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "required": true,
            "type": "string",
            "description": "transaction id"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTransactionResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["userEmail", "userPassword"],
        "properties": {
          "userEmail": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "userPassword": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "UpdateBalanceRequest": {
        "type": "object",
        "required": ["userEmail", "userPassword"],
        "properties": {
          "totalBalance": {
            "type": "number",
            "description": "User's balance",
            "example": 11111
          }
        }
      },
      "AddTransactionRequest": {
        "type": "object",
        "required": ["date", "description", "category", "sum", "type"],
        "properties": {
          "date": {
            "type": "string",
            "description": "Transaction date",
            "format": "date",
            "example": "2022-08-30"
          },
          "description": {
            "type": "string",
            "description": "Transaction discription",
            "example": "Meat"
          },
          "category": {
            "type": "string",
            "description": [
              "transport",
              "products",
              "health",
              "alcohol",
              "entertainment",
              "housing",
              "technique",
              "communal, communications",
              "sports, hobbies",
              "education",
              "other",
              "wages",
              "income"
            ],
            "example": "products"
          },
          "sum": {
            "type": "number",
            "description": "summa",
            "example": 400
          },
          "type": {
            "type": "string",
            "description": "expense or income",
            "example": "expense"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "message",
            "example": "logout ok"
          }
        },
        "example": {
          "status": "success",
          "code": 200,
          "data": {
            "token": "89ebEe9Gm2DvAdDcb_M67xaSB-_s0YnfdN679QU",
            "user": {
              "userEmail": "user@example.com"
            }
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "message",
            "example": "Logout success with id630a7441b8ed1ff8a8a403ee"
          },
          "code": {
            "type": "number",
            "description": "code",
            "example": "200"
          }
        },
        "example": {
          "status": "Logout success with id630a7441b8ed1ff8a8a403ee",
          "code": 200
        }
      },

      "BalanceResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "message",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "code",
            "example": "200"
          },
          "data": {
            "type": "object",
            "description": "response",
            "example": {
              "totalBalance": 1100
            }
          }
        },
        "example": {
          "status": "success",
          "code": 200,
          "data": {
            "totalBalance": 1100
          }
        }
      },
      "AddTransactionResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "message",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "code",
            "example": "200"
          },
          "data": {
            "type": "object",
            "description": "response",
            "example": {
              "result": {
                "date": "2022-08-29T00:00:00.000Z",
                "owner": "630a4ce122d8de88190363c9",
                "description": "tekila44",
                "category": "alcohol",
                "sum": 100,
                "type": "expense",
                "_id": "630dd63ff6a94d0201061201",
                "createdAt": "2022-08-30T09:19:59.355Z",
                "updatedAt": "2022-08-30T09:19:59.355Z"
              },
              "totalBalance": 400
            }
          }
        },
        "example": {
          "status": "success",
          "code": 201,
          "data": {
            "result": {
              "date": "2022-08-29T00:00:00.000Z",
              "owner": "630a4ce122d8de88190363c9",
              "description": "tekila44",
              "category": "alcohol",
              "sum": 100,
              "type": "expense",
              "_id": "630dd63ff6a94d0201061201",
              "createdAt": "2022-08-30T09:19:59.355Z",
              "updatedAt": "2022-08-30T09:19:59.355Z"
            },
            "totalBalance": 400
          }
        }
      },
      "GetAllTransactionResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "message",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "code",
            "example": "200"
          },
          "data": {
            "type": "object",
            "description": "response",
            "example": {
              "result": {
                "_id": "630c6424c4126b2f6d97fa7f",
                "date": "2022-01-01T00:00:00.000Z",
                "owner": {
                  "_id": "630a4ce122d8de88190363c9"
                },
                "description": "meat",
                "category": "products",
                "sum": 100,
                "type": "expense",
                "createdAt": "2022-08-29T07:00:52.786Z",
                "updatedAt": "2022-08-29T07:00:52.786Z"
              }
            }
          }
        },
        "example": {
          "status": "success",
          "code": 200,
          "data": {
            "result": [
              {
                "_id": "630c6424c4126b2f6d97fa7f",
                "date": "2022-01-01T00:00:00.000Z",
                "owner": {
                  "_id": "630a4ce122d8de88190363c9"
                },
                "description": "meat",
                "category": "products",
                "sum": 100,
                "type": "expense",
                "createdAt": "2022-08-29T07:00:52.786Z",
                "updatedAt": "2022-08-29T07:00:52.786Z"
              },
              {
                "_id": "630dd5d7f6a94d02010611f5",
                "date": "2022-08-29T00:00:00.000Z",
                "owner": {
                  "_id": "630a4ce122d8de88190363c9"
                },
                "description": "tekila44",
                "category": "alcohol",
                "sum": 100,
                "type": "expense",
                "createdAt": "2022-08-30T09:18:15.941Z",
                "updatedAt": "2022-08-30T09:18:15.941Z"
              }
            ]
          }
        }
      },
      "DeleteTransactionResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "message",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "code",
            "example": "200"
          },
          "data": {
            "type": "object",
            "description": "response",
            "example": {
              "message": "Transaaction with ID630dd624f6a94d02010611fd deleted",
              "newBalance": -300
            }
          }
        }
      },
      "example": {
        "status": "success",
        "code": 200,
        "data": {
          "message": "Transaaction with ID630dd624f6a94d02010611fd deleted",
          "newBalance": -300
        }
      }
    },

    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
